@startuml

class Supplier{
CustomerID: String
Name: string
Contact: string
Email: string
Add(): void
Update(): void
Delete(): void
}

class Account{
AccountID: String
Account_pasword: string
Role: string
Add(): void
Update(): void
Delete(): void
}

class Employee{
EmployeeID: String
Name: string
Contact: string
Email: string
Add(): void
Update(): void
Delete(): void
}

class Seller{
EmployeeID: String
CreateOrder(): void
SeeOrderStatus(): void
SeeStock(): void
}

class Driver{
EmployeeID: String
License: string
UpdateLocation(): void
RequestMaintenance(): void
}

class Maintainance{

MaintenanceID: string
DriverID: string
NumberPlate: string
Cost: float
Type: string
Time: Datetime
Address: string
Add(): void
Update(): void
Delete(): void
}

class Vehicle{
Number_plate: String
Type: string
Model: string
MFG: Datetime
License: string
Insurance: string
Certificate_of_Inspection: string
Status: string
Conditions: string
Add(): void
Update(): void
Delete(): void
}

class Transport{
TransportID: String

Customer: String
Driver: string
Vehicle: String
Route: String
Vehicle: String
ArrangedSlot: String
DepartTime: Datetime
ArriveTime: Datetime
DepartLocation: String
Status: String
ArriveLocation: String
Add(): void
Update(): void
}
class GRN{
GRNID: String
Location: string
Driver: string
TransportID: string
Add(): void
Update(): void
Delete(): void
}

class GDN{
GRNID: String
Location: string
Driver: string
TransportID: string
Add(): void
Update(): void
Delete(): void
}

class Warehouse{
WarehouseID: String
WhAddress: String
ItemSlot: String
Add(): void
Update(): void
Delete(): void
}

class Route{
RouteID: String
WareHouseID: string
Add(): void
Update(): void
Delete(): void
}

class Order{
OrderID: String
Customer: String
Product: String
Quantity: Integer
Add(): void
Update(): void
Delete(): void
}

class Invoice {
InvoiceID: String
Total: Float
Add(): void
Update(): void
Delete(): void
}

class Customer{
CustomerID: String
Name: string
Contact: string
Email: string
Add(): void
Update(): void
Delete(): void
}

class Product{
ProductID: String
Name: string
Type: string
Weight: string
Quantity: Integer
Add(): void
Update(): void
Delete(): void
}

Account <|-- Employee
Employee <|-- Seller
Employee <|-- Driver

Seller "1" -- "0..*" Order :Create
Customer "1..*" -- "1..*" Order : Own
Product "1..*" o-- "1" Order
Product "1..*" -- "1" Customer : Own
Invoice <|-- Order 

Transport "1"*--"n" Order

Maintainance "0..1" <-- "0..*" Driver : Request
Driver "1..*" <-- "0..1" Transport : Go
Vehicle "1..*" -- "0..1" Transport : Follow
Vehicle "0..*" <-- "0..1" Maintainance : Check
Driver "1" -- "1" Vehicle : Drive

Warehouse "1..*" -- "1..*" Transport : Vist
Route "0..*" -- "1" Transport : Have
Route "0..*" -- "1..*" Warehouse : Visit

Transport "1" -- "1..*" GRN : Have
Transport "1" -- "1..*" GDN :Have
Warehouse "1" -- "1" GRN: Have
Warehouse "1" -- "1" GDN : Have

Product "1..*" -- "1" Warehouse : Contain


@enduml
